# Docker Compose for Pego Production
version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: pego-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${DB_NAME:-pego_database}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - pego-network

  # FastAPI Backend
  backend:
    build: .
    container_name: pego-backend
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - MONGO_URL=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${DB_NAME:-pego_database}?authSource=admin
      - DB_NAME=${DB_NAME:-pego_database}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key}
      - ADMIN_SECRET_KEY=${ADMIN_SECRET_KEY:-your-admin-secret-key}
      - SESSION_SECRET_KEY=${SESSION_SECRET_KEY:-your-session-secret-key}
      - STRIPE_API_KEY=${STRIPE_API_KEY}
      - PROMPTPAY_ID=${PROMPTPAY_ID}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - pego-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pego-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - pego-network

volumes:
  mongodb_data:

networks:
  pego-network:
    driver: bridge