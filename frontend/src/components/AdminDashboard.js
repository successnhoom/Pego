import React, { useState, useEffect } from 'react';
import { useAdminAuth } from '../contexts/AdminAuthContext';

const AdminDashboard = () => {
  const { admin, logout, apiCall } = useAdminAuth();
  const [activeTab, setActiveTab] = useState('overview');
  const [stats, setStats] = useState(null);
  const [users, setUsers] = useState([]);
  const [videos, setVideos] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadDashboardData();
  }, []);

  const loadDashboardData = async () => {
    try {
      setLoading(true);
      const [dashboardStats, usersData, videosData] = await Promise.all([
        apiCall('/dashboard'),
        apiCall('/users?limit=20'),
        apiCall('/videos?limit=20')
      ]);
      
      setStats(dashboardStats);
      setUsers(usersData.users || []);
      setVideos(videosData.videos || []);
    } catch (error) {
      console.error('Error loading dashboard data:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleUserAction = async (userId, action, reason = '') => {
    try {
      await apiCall(`/users/${userId}/${action}`, {
        method: 'POST',
        body: JSON.stringify({ reason })
      });
      await loadDashboardData(); // Reload data
      alert(`‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ${action} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
    } catch (error) {
      alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
    }
  };

  const handleVideoAction = async (videoId, action) => {
    try {
      if (action === 'delete') {
        if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ô‡∏µ‡πâ?')) return;
        await apiCall(`/videos/${videoId}`, { method: 'DELETE' });
      } else {
        await apiCall('/videos/moderate', {
          method: 'POST',
          body: JSON.stringify({
            video_ids: [videoId],
            action: action
          })
        });
      }
      await loadDashboardData(); // Reload data
      alert('‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    } catch (error) {
      alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
    }
  };

  const formatDate = (dateString) => {
    return new Intl.DateTimeFormat('th-TH', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    }).format(new Date(dateString));
  };

  const formatNumber = (num) => {
    return new Intl.NumberFormat('th-TH').format(num);
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-900 flex items-center justify-center">
        <div className="text-white text-xl">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-900">
      {/* Header */}
      <header className="bg-gray-800 shadow">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-6">
            <div className="flex items-center">
              <h1 className="text-3xl font-bold text-white">Pego Admin</h1>
              <span className="ml-4 px-3 py-1 bg-blue-600 text-white text-sm rounded-full">
                {admin?.role}
              </span>
            </div>
            <div className="flex items-center space-x-4">
              <span className="text-gray-300">‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ, {admin?.username}</span>
              <button
                onClick={logout}
                className="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm"
              >
                ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
              </button>
            </div>
          </div>
        </div>
      </header>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Navigation Tabs */}
        <div className="border-b border-gray-700 mb-8">
          <nav className="-mb-px flex space-x-8">
            {[
              { id: 'overview', name: '‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°', icon: 'üìä' },
              { id: 'users', name: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', icon: 'üë•' },
              { id: 'videos', name: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠', icon: 'üé¨' },
              { id: 'financial', name: '‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô', icon: 'üí∞' },
              { id: 'settings', name: '‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤', icon: '‚öôÔ∏è' }
            ].map((tab) => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`${
                  activeTab === tab.id
                    ? 'border-blue-500 text-blue-400'
                    : 'border-transparent text-gray-400 hover:text-gray-300 hover:border-gray-300'
                } whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2`}
              >
                <span>{tab.icon}</span>
                <span>{tab.name}</span>
              </button>
            ))}
          </nav>
        </div>

        {/* Overview Tab */}
        {activeTab === 'overview' && stats && (
          <div className="space-y-6">
            {/* Stats Cards */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              <div className="bg-gray-800 rounded-lg p-6">
                <div className="flex items-center">
                  <div className="flex-shrink-0">
                    <div className="text-2xl">üë•</div>
                  </div>
                  <div className="ml-4">
                    <div className="text-sm font-medium text-gray-400">‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
                    <div className="text-2xl font-bold text-white">
                      {formatNumber(stats.overview?.total_users || 0)}
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="bg-gray-800 rounded-lg p-6">
                <div className="flex items-center">
                  <div className="flex-shrink-0">
                    <div className="text-2xl">üé¨</div>
                  </div>
                  <div className="ml-4">
                    <div className="text-sm font-medium text-gray-400">‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
                    <div className="text-2xl font-bold text-white">
                      {formatNumber(stats.overview?.total_videos || 0)}
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="bg-gray-800 rounded-lg p-6">
                <div className="flex items-center">
                  <div className="flex-shrink-0">
                    <div className="text-2xl">üí∞</div>
                  </div>
                  <div className="ml-4">
                    <div className="text-sm font-medium text-gray-400">‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</div>
                    <div className="text-2xl font-bold text-white">
                      ‡∏ø{formatNumber(stats.today?.total_revenue || 0)}
                    </div>
                  </div>
                </div>
              </div>
              
              <div className="bg-gray-800 rounded-lg p-6">
                <div className="flex items-center">
                  <div className="flex-shrink-0">
                    <div className="text-2xl">‚ú®</div>
                  </div>
                  <div className="ml-4">
                    <div className="text-sm font-medium text-gray-400">‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</div>
                    <div className="text-2xl font-bold text-white">
                      {formatNumber(stats.today?.new_users || 0)}
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Current Competition */}
            {stats.current_competition && (
              <div className="bg-gray-800 rounded-lg p-6">
                <h3 className="text-lg font-medium text-white mb-4">‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</h3>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div>
                    <div className="text-sm text-gray-400">‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô</div>
                    <div className="text-white font-medium">{stats.current_competition.title}</div>
                  </div>
                  <div>
                    <div className="text-sm text-gray-400">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°</div>
                    <div className="text-white font-medium">{formatNumber(stats.current_competition.participant_count)}</div>
                  </div>
                  <div>
                    <div className="text-sm text-gray-400">‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</div>
                    <div className="text-white font-medium">‡∏ø{formatNumber(stats.current_competition.prize_pool)}</div>
                  </div>
                </div>
              </div>
            )}
          </div>
        )}

        {/* Users Tab */}
        {activeTab === 'users' && (
          <div className="space-y-6">
            <div className="flex justify-between items-center">
              <h2 className="text-2xl font-bold text-white">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h2>
              <button
                onClick={loadDashboardData}
                className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md"
              >
                ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
              </button>
            </div>
            
            <div className="bg-gray-800 rounded-lg overflow-hidden">
              <table className="min-w-full divide-y divide-gray-700">
                <thead className="bg-gray-700">
                  <tr>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                      ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                      ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                      ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                      ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                      ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
                    </th>
                  </tr>
                </thead>
                <tbody className="bg-gray-800 divide-y divide-gray-700">
                  {users.map((user) => (
                    <tr key={user.id}>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <div className="flex items-center">
                          <div className="flex-shrink-0 h-10 w-10">
                            <div className="h-10 w-10 rounded-full bg-blue-600 flex items-center justify-center">
                              <span className="text-white font-medium">
                                {user.display_name?.charAt(0) || user.username?.charAt(0)}
                              </span>
                            </div>
                          </div>
                          <div className="ml-4">
                            <div className="text-sm font-medium text-white">
                              {user.display_name || user.username}
                              {user.is_verified && <span className="ml-1 text-blue-400">‚úì</span>}
                            </div>
                            <div className="text-sm text-gray-400">@{user.username}</div>
                          </div>
                        </div>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                          user.is_active 
                            ? 'bg-green-900 text-green-200' 
                            : 'bg-red-900 text-red-200'
                        }`}>
                          {user.is_active ? '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ' : '‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô'}
                        </span>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
                        {user.video_count || 0}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
                        {formatNumber(user.credits || 0)}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                        {user.is_active ? (
                          <button
                            onClick={() => handleUserAction(user.id, 'ban', prompt('‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ô:'))}
                            className="text-red-400 hover:text-red-300"
                          >
                            ‡πÅ‡∏ö‡∏ô
                          </button>
                        ) : (
                          <button
                            onClick={() => handleUserAction(user.id, 'unban')}
                            className="text-green-400 hover:text-green-300"
                          >
                            ‡∏õ‡∏•‡∏î‡πÅ‡∏ö‡∏ô
                          </button>
                        )}
                        <button
                          onClick={() => {
                            const amount = prompt('‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï (‡πÉ‡∏™‡πà - ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏î):');
                            const reason = prompt('‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:');
                            if (amount && reason) {
                              apiCall(`/users/${user.id}/credits/adjust`, {
                                method: 'POST',
                                body: JSON.stringify({ amount: parseInt(amount), reason })
                              }).then(() => {
                                alert('‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
                                loadDashboardData();
                              }).catch(err => alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${err.message}`));
                            }
                          }}
                          className="text-yellow-400 hover:text-yellow-300"
                        >
                          ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
                        </button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        )}

        {/* Videos Tab */}
        {activeTab === 'videos' && (
          <div className="space-y-6">
            <div className="flex justify-between items-center">
              <h2 className="text-2xl font-bold text-white">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠</h2>
              <button
                onClick={loadDashboardData}
                className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md"
              >
                ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
              </button>
            </div>
            
            <div className="bg-gray-800 rounded-lg overflow-hidden">
              <table className="min-w-full divide-y divide-gray-700">
                <thead className="bg-gray-700">
                  <tr>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                      ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                      ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                      ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                      ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                      ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
                    </th>
                  </tr>
                </thead>
                <tbody className="bg-gray-800 divide-y divide-gray-700">
                  {videos.map((video) => (
                    <tr key={video.id}>
                      <td className="px-6 py-4">
                        <div>
                          <div className="text-sm font-medium text-white">{video.title}</div>
                          <div className="text-sm text-gray-400">
                            {formatDate(video.upload_date)}
                          </div>
                        </div>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <div className="text-sm text-white">
                          {video.user?.display_name || 'Unknown'}
                          {video.user?.is_verified && <span className="ml-1 text-blue-400">‚úì</span>}
                        </div>
                        <div className="text-sm text-gray-400">@{video.user?.username}</div>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
                        <div>üëÅÔ∏è {formatNumber(video.view_count || 0)}</div>
                        <div>‚ù§Ô∏è {formatNumber(video.like_count || 0)}</div>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                          video.status === 'active' 
                            ? 'bg-green-900 text-green-200' 
                            : 'bg-red-900 text-red-200'
                        }`}>
                          {video.status === 'active' ? '‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ' : '‡∏ñ‡∏π‡∏Å‡∏£‡∏∞‡∏á‡∏±‡∏ö'}
                        </span>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                        {video.status === 'active' ? (
                          <button
                            onClick={() => handleVideoAction(video.id, 'suspend')}
                            className="text-red-400 hover:text-red-300"
                          >
                            ‡∏£‡∏∞‡∏á‡∏±‡∏ö
                          </button>
                        ) : (
                          <button
                            onClick={() => handleVideoAction(video.id, 'approve')}
                            className="text-green-400 hover:text-green-300"
                          >
                            ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                          </button>
                        )}
                        <button
                          onClick={() => handleVideoAction(video.id, 'delete')}
                          className="text-red-400 hover:text-red-300"
                        >
                          ‡∏•‡∏ö
                        </button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        )}

        {/* Financial Tab */}
        {activeTab === 'financial' && (
          <div className="space-y-6">
            <h2 className="text-2xl font-bold text-white">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô</h2>
            
            <div className="bg-gray-800 rounded-lg p-6">
              <h3 className="text-lg font-medium text-white mb-4">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏≤‡∏Ñ‡∏≤</h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-300">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ (‡∏ö‡∏≤‡∏ó)</label>
                  <input
                    type="number"
                    defaultValue="30"
                    className="mt-1 block w-full bg-gray-700 border border-gray-600 rounded-md px-3 py-2 text-white"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-300">‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• (%)</label>
                  <input
                    type="number"
                    defaultValue="70"
                    className="mt-1 block w-full bg-gray-700 border border-gray-600 rounded-md px-3 py-2 text-white"
                  />
                </div>
              </div>
              <button className="mt-4 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md">
                ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
              </button>
            </div>
          </div>
        )}

        {/* Settings Tab */}
        {activeTab === 'settings' && (
          <div className="space-y-6">
            <h2 className="text-2xl font-bold text-white">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö</h2>
            
            <div className="bg-gray-800 rounded-lg p-6">
              <h3 className="text-lg font-medium text-white mb-4">‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</h3>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-300">‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô (‡∏ß‡∏±‡∏ô)</label>
                  <input
                    type="number"
                    defaultValue="7"
                    className="mt-1 block w-full bg-gray-700 border border-gray-600 rounded-md px-3 py-2 text-white"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-300">‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (MB)</label>
                  <input
                    type="number"
                    defaultValue="100"
                    className="mt-1 block w-full bg-gray-700 border border-gray-600 rounded-md px-3 py-2 text-white"
                  />
                </div>
              </div>
              <button className="mt-4 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md">
                ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default AdminDashboard;